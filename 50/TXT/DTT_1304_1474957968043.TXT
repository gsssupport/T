CREATE TABLE DATA_ENTRY_DT_EV_TEST
(
DEDET_ID INTEGER NOT NULL ,
ASSET_QUANTITY INTEGER NULL,
ASSET_DESCRIPTION CHARACTER VARYING(32) NULL,
DATE_OF_PURCHASE TIMESTAMP WITHOUT TIME ZONE NULL,
ENTER_PASSWORD CHARACTER VARYING(32) NULL,
ADDRESS CHARACTER VARYING(128) NULL,
ASSET_TYPE CHARACTER VARYING(32) NULL,
COUNTRY CHARACTER VARYING(32) NULL,
ID_PROOF CHARACTER VARYING(32) NOT NULL ,
ADD_PHOTO BYTEA NULL,
VISITED_TIME CHARACTER VARYING(64) NULL, CREATED_BY text NOT NULL, 
 CREATED_BY_NAME text ,
 CREATED_DATE timestamp without time zone NOT NULL,
 MODIFIED_BY text,
 MODIFIED_BY_NAME text,
 MODIFIED_DATE timestamp without time zone,
 SYSTEM_ID TEXT, 
 SYSTEM_NAME text, 
 PRCT_ID TEXT,
 CREATED_BY_STS_ID TEXT, 
 MODIFIED_BY_STS_ID TEXT, 
 STATUS TEXT,
 PROCESS_STATUS TEXT ,
 DT_CODE TEXT ,
 DT_DESCRIPTION TEXT ,
 DTT_CODE TEXT ,
 DTT_DESCRIPTION TEXT ,
 VERSION_NO integer DEFAULT 0 
 );
CREATE SEQUENCE SEQ_DATA_ENTRY_DT_EV_TEST
INCREMENT 1
MINVALUE 1
MAXVALUE 9223372036854775807
START 1 
CACHE 20;


ALTER TABLE DATA_ENTRY_DT_EV_TEST
 ALTER COLUMN DEDET_ID  SET DEFAULT nextval('SEQ_DATA_ENTRY_DT_EV_TEST');


CREATE OR REPLACE FUNCTION TRG_DATA_ENTRY_DT_EV_TEST()
RETURNS trigger AS
$BODY$
BEGIN
NEW.TRG_DATA_ENTRY_DT_EV_TEST=CURRENT_TIMESTAMP;RETURN NEW;
END $BODY$
LANGUAGE plpgsql VOLATILE
COST 100;
ALTER TABLE DATA_ENTRY_DT_EV_TEST ADD CONSTRAINT DATA_ENTRY_DT_EV_TEST_pkey primary key(DEDET_ID);

 CREATE TRIGGER TRG_HST_DATA_ENTRY_DT_EV_TEST
 BEFORE INSERT OR UPDATE 
 ON DATA_ENTRY_DT_EV_TEST
 FOR EACH ROW 
 EXECUTE PROCEDURE FN_TRG_HST_TRAN_DATA() ;


ALTER TABLE DATA_ENTRY_DT_EV_TEST  DISABLE TRIGGER TRG_HST_DATA_ENTRY_DT_EV_TEST ;
